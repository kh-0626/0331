package com.kh.start.token.model.service;

import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Service;

import com.kh.start.auth.util.JwtUtil;
import com.kh.start.token.model.dao.TokenMapper;
import com.kh.start.token.model.vo.RefreshToken;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
@RequiredArgsConstructor
public class TokenServiceImpl implements TokenService {
	
	private final JwtUtil tokenUtil;
	private final TokenMapper tokenMapper;
	
	@Override
	public Map<String, String> generateToken(String username , Long memberNo) {
		
		// 1, 2번
		Map<String, String> tokens = createToken(username);
		
		// 3번 (*해결 memberNo, *해결 refreshToken, *해결 expiration)
		saveToken(tokens.get("refreshToken"), memberNo);
		
		// 4번
		
		// 5번
		
		return tokens;
	}
	
	private void saveToken(String refreshToken, Long memberNo) {
		RefreshToken token = RefreshToken.builder()
				 .token(refreshToken)
				 .memberNo(memberNo)
				 .expiration(System.currentTimeMillis() + 36000000L * 72)
				 .build();
		
		// 인서트
		tokenMapper.saveToken(token);
		
	}

	private Map<String, String> createToken(String username){
		
		String accessToken = tokenUtil.getAccessToken(username);
		String refreshToken = tokenUtil.getRefreshToken(username);
		
		Map<String, String> tokens = new HashMap();
		tokens.put("accessToken", refreshToken);
		tokens.put("refreshToken", refreshToken);
		
		return tokens;
	}

	@Override
	public Map<String, String> generateToken(String username) {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	
	
	
	
	
	
	
	
}
