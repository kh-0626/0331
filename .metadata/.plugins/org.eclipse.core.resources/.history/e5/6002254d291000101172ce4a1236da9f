package com.kh.start.board.service;

import java.util.List;

import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.kh.start.auth.model.vo.CustomUserDetails;
import com.kh.start.board.dao.BoardMapper;
import com.kh.start.board.dto.BoardDTO;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Service
@RequiredArgsConstructor
@Slf4j
public class BoardServiceImpl implements BoardService {

	private final BoardMapper boardMapper;
	
	@Override
	public void save(BoardDTO board, MultipartFile file) {
		
		// board에는 게시글 정보
		// file 파일이 존재할 경우 파일의 정보
		
		Authentication auth =
				SecurityContextHolder.getContext().getAuthentication();
		CustomUserDetails user = (CustomUserDetails)auth.getPrincipal();

		Long memberNo = user.getMemberNo();
		
		board.setBoardWriter(String.valueOf(memberNo));
		
	}

	@Override
	public List<BoardDTO> findAll(int pageNo) {
		
		return null;
	}

	@Override
	public BoardDTO findById(Long boardNo) {
		
		return null;
	}

	@Override
	public BoardDTO update(BoardDTO board, MultipartFile file) {
		
		return null;
	}

	@Override
	public void deleteById(Long boardNo) {
		

	}

}
