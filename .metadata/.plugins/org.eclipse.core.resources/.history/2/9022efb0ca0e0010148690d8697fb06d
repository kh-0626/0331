package com.kh.start.exception;

import java.util.HashMap;

import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@ControllerAdvice
public class GlobalExceptionHandler {

	@ExceptionHandler(MemberIdDuplicateException.class)
	public ResponseEntity<?> handleDucplicateMemberId(MemberIdDuplicateException e){
		Map<String, String> error = new HashMap();
		error.put("error-message", e.getMessage());
		return ResponseEntity.badRequest().body(e.getMessage());
	}
	
	@ExceptionHandler(CustomAuthenticationException.class)
	public ResponseEntity<?> handleArgumentsNotValid(MethodArgumentNotValidException e){
		
		Map<String, String> error = new HashMap();
		error.put("error-message", e.getMessage());
		//return ResponseEntity.badRequest().body(error);
		/*
		for(int i = 0; i < list.size(); i++) {
			log.info("예외가 발생한 필드명 : {}, 이유 : {}",
					((FieldError)list.get(i)).getField(),
					((FieldError)list.get(i)).getDefaultMessage());
		}
		*/
		e.getBindingResult()
		.getFieldErrors()
		.forEach(error -> errors.put(error.getField(), error.getDefaultMessage()));
		
		return ResponseEntity.badRequest().body(errors);
	}
	
	
	
	
	
}
