package com.kh.start.member.model.service;

import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.kh.start.member.model.dao.MemberMapper;
import com.kh.start.member.model.dto.ChangePasswordDTO;
import com.kh.start.member.model.dto.MemberDTO;
import com.kh.start.member.model.vo.Member;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
@RequiredArgsConstructor
public class MemberServiceImpl implements MemberService{

	private final MemberMapper mapper;
	private final PasswordEncoder passwordEncoder;
	
	public void signUp(MemberDTO member) {
		
		MemberDTO searchedMember = mapper.getMemberByMemberId(member.getMemberId());
		
		if(searchedMember != null) {
			throw new RuntimeException("이미 존재하는 아이디");	
		}
		
		// 할 일 두개
		// 첫 번째 : 비밀번호 암호화
		// 두 번째 : Role주기
		Member memberValue = Member.builder()
									.memberId(member.getMemberId())
									.memberPw(passwordEncoder.encode(member.getMemberPw()))
									.memberName(member.getMemberName())
									.role("ROLE_USER")
									.build();
		
		mapper.signUp(memberValue);
		log.info("사용자 등록 성공 : {}", member);
		
		
	}

	@Override
	public void changePassword(ChangePasswordDTO passwordEntity) {
		
		// 현재 비밀번호를 맞게 입력했는지 검증		
		// 맞다면 새로운 비밀번호를 암호화	
		// SecurityContextHolder에서 사용자 정보 받아오기
		
		
		
	}
}
